import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime, timezone, timedelta

# Function to draw the clock hands
def draw_hand(ax, angle, length, **kwargs):
    x = length * np.cos(np.radians(angle))
    y = length * np.sin(np.radians(angle))
    ax.plot([0, x], [0, y], **kwargs)

def update_clock():
    # Get current time
    now = datetime.now()
    gmt_now = datetime.now(timezone.utc)
    
    # Calculate angles
    second_angle = now.second * 6
    minute_angle = (now.minute + now.second / 60) * 6
    hour_angle = (now.hour % 12 + now.minute / 60 + now.second / 3600) * 30
    gmt_angle = (gmt_now.hour % 24) * 15
    
    # Clear the axes and remove the gridlines
    ax.clear()
    ax.axis('off')
    
    # Draw the clock hands
    draw_hand(ax, -second_angle, 0.9, color='red', lw=1)
    draw_hand(ax, -minute_angle, 0.7, color='blue', lw=3)
    draw_hand(ax, -hour_angle, 0.5, color='green', lw=6)
    draw_hand(ax, -gmt_angle, 0.6, color='yellow', lw=2, linestyle='--')
    
    # Draw the clock face
    clock_face = plt.Circle((0, 0), 1, edgecolor='black', facecolor='white')
    ax.add_artist(clock_face)
    
    # Draw ticks for hours and minutes
    for i in range(60):
        angle = np.radians(i * 6)
        x_outer = np.cos(angle)
        y_outer = np.sin(angle)
        if i % 5 == 0:
            x_inner = 0.85 * np.cos(angle)
            y_inner = 0.85 * np.sin(angle)
        else:
            x_inner = 0.95 * np.cos(angle)
            y_inner = 0.95 * np.sin(angle)
        ax.plot([x_inner, x_outer], [y_inner, y_outer], color='black')
    
    plt.pause(1)

fig, ax = plt.subplots(figsize=(6, 6))
ax.set_aspect('equal')

# Run the clock
while True:
    update_clock()
    plt.draw()